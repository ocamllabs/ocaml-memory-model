(*
 * Old (outdated) version of the multicore OCaml memory model,
 * corresponding to a talk presented at OCaml Workshop 2017
 *)

include "cos.cat"

let com = co | rf | fr

let hb = (
  (* Happens-before between two events to the same
     location on the same thread, if not both reads *)
  [W]; (po & loc); [M] |
  [M]; (po & loc); [W] |

  (* Happens-before between atomic ops and other
     operations on the same thread *)
  po; [Ma] |
  [Ma]; po |

  (* Happens-before between atomic ops to the
     same location, if not both reads *)
  [Ma]; com; [Ma]
)+

acyclic (hb | po | rf) as Causality
acyclic (com | (hb & loc)) as Coherence
